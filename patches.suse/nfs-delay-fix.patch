From: NeilBrown <neilb@suse.com>
Subject: NFS: fix racey wait in nfs_set_open_stateid_locked
References: bsc#1170592
Patch-mainline: not yet, under development

When waiting for an event it is important to test for the event AFTER calling
prepare_to_wait() and before calling schedule, otherwise the wakeup could
happen BEFORE the prepare_to_wait(), and be lost.

In this case the race manifests as unnecesary 5 second pauses.

So move the test to the correct place.

Signed-off-by: NeilBrown <neilb@suse.com>

---
 fs/nfs/nfs4proc.c |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

--- a/fs/nfs/nfs4proc.c
+++ b/fs/nfs/nfs4proc.c
@@ -1525,8 +1525,6 @@ static void nfs_set_open_stateid_locked(
 
 		if (!nfs_need_update_open_stateid(state, stateid))
 			return;
-		if (!test_bit(NFS_STATE_CHANGE_WAIT, &state->flags))
-			break;
 		if (status)
 			break;
 		/* Rely on seqids for serialisation with NFSv4.0 */
@@ -1534,6 +1532,8 @@ static void nfs_set_open_stateid_locked(
 			break;
 
 		prepare_to_wait(wq_head, &wbq_entry.wq_entry, TASK_KILLABLE);
+		if (!test_bit(NFS_STATE_CHANGE_WAIT, &state->flags))
+			break;
 		/*
 		 * Ensure we process the state changes in the same order
 		 * in which the server processed them by delaying the
@@ -1554,6 +1554,7 @@ static void nfs_set_open_stateid_locked(
 		spin_lock(&state->owner->so_lock);
 		write_seqlock(&state->seqlock);
 	}
+	finish_wait(wq_head, &wbq_entry.wq_entry);
 
 	if (!nfs4_stateid_match_other(stateid, &state->open_stateid)) {
 		nfs4_stateid_copy(freeme, &state->open_stateid);
